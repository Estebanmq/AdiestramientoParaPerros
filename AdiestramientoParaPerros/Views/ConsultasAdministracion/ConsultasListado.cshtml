@model List<Consulta>

@{
    Layout = ViewBag.Layout;
    List<Estado> estados = ViewBag.Estados as List<Estado>;
}

@section title {
    <title>Consultas</title>
}
<form method="post">
    <div class="form-group mb-3">
        <select name="idestado" class="form-select" required>
            <option selected disabled>Selecciona un estado para filtrar</option>
            <option value="-1">Mostrar todas</option>
            @foreach (Estado estado in estados)
            {
                <option value="@estado.IdEstado">@estado.TextoEstado</option>
            }
        </select>
    </div>
    <div class="form-group mb-3">
        <button type="submit" class="btn btn-primary">
            Buscar
        </button>
    </div>
</form>

@if (Model != null && Model.Count != 0)
{

    @foreach (Consulta c in Model)
    {
        <div class="container-fluid p-0">
            <div class="row">
                <div class="col-12 col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">@estados.Find(z => z.IdEstado == c.Estado).TextoEstado</h5>
                        </div>
                        <div class="card-body">
                            <p class="card-text"><strong>Teléfono:</strong>  @c.TelefonoContacto </p>
                            <p class="card-text"><strong>Email:</strong> @c.EmailContacto </p>
                            <p class="card-text">@c.TextoConsulta</p>
                            <a class="btn btn-primary" asp-controller="ConsultasAdministracion" asp-action="DetallesConsulta" asp-route-idconsulta="@c.IdConsulta">Detalles</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @section scripts {
        <script>
             @if(ViewBag.Mensaje != null)
                {
                <text>
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    },
                    background: '#6c757d',
                    color: '#FFFFFF'
                });

                Toast.fire({
                    icon: 'success',
                    title: "@ViewBag.Mensaje"
                });
                </text>
            }
        </script>
    }

}
else
{
    <h3 class="text-black p-4">No tienes consultas</h3>
}

